clear all; close all
%% Add Paths
restoredefaultpath

Folder_delimiter{1} = '\'; %Windows
Folder_delimiter{2} = '/'; %Linux
%CHOOSE:
fd_choose = 1;

Actual_directory = split(cd,Folder_delimiter{fd_choose});
data_path    = Actual_directory(1:end-2); data_path(length(data_path)+1) = {'Data'}; 
data_path(length(data_path)+1) = {'Online Algorithm'}; data_path = join(data_path,Folder_delimiter{fd_choose}); %Add '\fx' folder to path
addpath(genpath(data_path{1}));
%%
% 
Data = cell(1,3);
load('Original_OnlineData_N2000_c1999_Delta10.mat')
Data{1} = OnlineData;
load('Original_OnlineData_N2000_c1000_Delta10.mat')
Data{2} = OnlineData;
load('Original_OnlineData_N2000_c20_Delta10.mat')
Data{3} = OnlineData;

load('PeffData.mat')

% colors = [0,0,1;1,0,0;0.5,0,0;0.5,0,1];
colors = [0,0,1;1,0,0;0.7,0.7,0.3];
%%
figure(1)
plot(0,0,'color',colors(1,:),'LineWidth',2);hold on;plot(0,0,'color',colors(length(Data),:),'LineWidth',2)
for i = [1,length(Data)]
    plot_fill_space((1:length(Data{i}.Cmean)),Data{i}.Cmean,Data{i}.Cstd,colors(i,:),2,true)
    %xscale('log')
    hold on
end
xlim([0,12000])
ylabel('$\langle c\rangle$','Interpreter','latex')
xlabel('Iterations','Interpreter','latex')
legend({'$c_0=1999$','$c_0=20$'},'Interpreter','latex')
set(gca,'FontSize',25)
%%
for i = 1:4
    load(['LoadingCapacity_C_N2000_Epsilon_Paper_',num2str(i)])
end
Peff = mean([LoadingCapacity_C_N2000_Epsilon_Paper.Pmax;LoadingCapacity_C_N2000_Epsilon_Paper_2.Pmax;...
    LoadingCapacity_C_N2000_Epsilon_Paper_3.Pmax;LoadingCapacity_C_N2000_Epsilon_Paper_4.Pmax]);
Peff_std = std([LoadingCapacity_C_N2000_Epsilon_Paper.Pmax;LoadingCapacity_C_N2000_Epsilon_Paper_2.Pmax;...
    LoadingCapacity_C_N2000_Epsilon_Paper_3.Pmax;LoadingCapacity_C_N2000_Epsilon_Paper_4.Pmax]);

figure(1)

IND = unique([1:2:length(PeffData.peff),30]); Connectivity = round(linspace(20,1998,30));
errorbar(LoadingCapacity_C_N2000_Epsilon_Paper.C,Peff,Peff_std,'color',[0.85,0.325,0.098],'LineWidth',2)
hold on
errorbar(Connectivity(IND),mean(PeffData.peff_rand(:,IND)),std(PeffData.peff_rand(:,IND)),'color','k','LineWidth',2)

for i = 1:7
    plot(0,0,'color',[1,1,1])
    hold on
end
E = 0;
for i = 1:length(Data)
    plot(Data{i}.Cmean(1:end-E),Data{i}.peff(1:end-E),'color',colors(i,:),'LineWidth',3)
    hold on
end
legend({'Optimized ($\epsilon=\alpha$)','Random','','','','','','','','$c_0 = 1999$','$c_0 = 1000$','$c_0 = 20$'},'Interpreter','latex','NumColumns',4)
xlabel('$\langle c\rangle$','Interpreter','latex')
ylabel('$p_{eff}$','Interpreter','latex')
ylim([0,1100])
legend boxoff
set(gca,'FontSize',25)

%% Add inset
% create smaller axes in top right, and plot on it
xstart=.6;
xend=.8;
ystart=.6;
yend=.8;
% axes('position',[xstart ystart xend-xstart yend-ystart ])
% axes('Position',[.7 .7 .2 .2])
axes('Position',[.7 .7 .4 .2])
box on

errorbar(LoadingCapacity_C_N2000_Epsilon_Paper.C,Peff,Peff_std,'color',[0.85,0.325,0.098],'LineWidth',2)
hold on
E = 13000;
for i = 1:length(Data)
    plot(Data{i}.Cmean(1:end),Data{i}.peff(1:end),'color',colors(i,:),'LineWidth',2)
end
xlim([440,460])
ylim([650,800])
set(gca,'FontSize',20)
%%
function plot_fill_space(X_Data,Y_Data,Y_err_Data,color,LW,log_true)
        %Fill space between errorbars
        x = [X_Data, fliplr(X_Data)];
        inBetween = [Y_Data+Y_err_Data, fliplr(Y_Data-Y_err_Data)];
        h_f = fill(x, inBetween, color);
        set(h_f,'facealpha',.2,'EdgeColor',color,'edgealpha',0.4)
        hold on
        plot(X_Data,Y_Data,'color',color,'linewidth',LW)
end